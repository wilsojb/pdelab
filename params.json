{"name":"Pdelab","tagline":"An object oriented framework for solving and analyzing PDEs","body":"\r\n### Overview\r\nAn object oriented framework for solving and analyzing PDEs. This project grew organically while I worked (read: toiled) on my graduate degree. The goal of the framework was to abstract away the mechanics and other \"lower level\" code needed to solve PDEs so the researcher can spend more time focusing on their solver (i.e. their \"business logic\"). \r\n\r\n### Installation\r\n\r\n1.  Open pdelab/makefile and pdelab/examples/makefile. Edit the compiler and linker locations and flags for each. This should be the only change necessary to the makefiles.\r\n\r\n2.  Excecute the following make commands from the project's root directory,\r\n\r\n````bash\r\n$ cd pdelab\r\n$ make spotless\r\n$ make\r\n````\r\n\r\n3. (Optionally) Add the paths \"pdelab/bin/\" and \"pdelab/py\" to your .profile\r\n4. Type `pdelab` from the project's root directory to launch the CLI. \r\n\r\n\r\n### TL;DR: Quick start guide\r\n\r\nThe easiest way to get started is to follow the installation guide and then run a test. In a terminal, type\r\n\r\n````bash\r\n$ pdelab\r\npdelab> sim advec 2000\r\npdelab> script advec 1 0 2000 0\r\npdelab> gnuplot\r\ngnuplot> load 'gp/advec.gp'\r\ngnuplot> exit\r\npdelab> exit\r\n$\r\n````\r\n\r\nThis should simulate and display the advection equation.\r\n\r\n### Instruction scripts\r\nCreate the following script under the name \"pde/foo.pde\"...\r\n\r\n````bash\r\n# This file will solve the advection equation using finite\r\n# differencing techniques and will plot the resulting\r\n# time series in gnuplot. 500 timesteps are calculated.\r\n\r\n# This file will also set an instruction to calculate the norm\r\n# of the solution as a function of time. It will store the\r\n# resulting time series in normdata/advec.dat\r\n\r\nset norm advec normdata/ \r\nsim advec 500 \r\nscript advec 1 0 500 0 \r\ngnuplot -persist \"gp/advec.gp'\r\n````\r\n\r\nthen run the set of instructions from a terminal window...\r\n\r\n````bash\r\n$ pdelab\r\npdelab> load foo\r\n````\r\n\r\nThis runs a simulation, creates a file that gnuplot can read, calculates norms, and plots the results. All that as needed from the researcher to get this working was Example.h and Example.cpp which contains the numerical algorithm for solving the advection equation. \r\n\r\nMore complicated analysis is possible using some of the other Instructions (see diffnorm.py) or if there is a need for one\r\nthat doesn't exist, you can always make a new one!\r\n\r\n### Dependencies\r\n\r\nIn order to use pdelab, you will at least need the gcc compiler and the make utility installed.  pdelab has been built on a Mac OSX and Linux with the gcc and intel compilers. Here are some other useful packages that will make for a much richer experience. \r\n\r\n````bash\r\n$ pip freeze \r\npython-2.6.5\r\ngnuplot-py-1.8\r\nipython-0.10-py2.6\r\nnumpy-1.4.1rc3-py2.6\r\nscipy-0.7.2rc3-py2.6\r\nmatplotlib-0.99.1.1-py2.6\r\nsetuptools-0.6c11-py2.6\r\n````\r\n\r\n### Author\r\n\r\nwilsojb@gmail.com\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}